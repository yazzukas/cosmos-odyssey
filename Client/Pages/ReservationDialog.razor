

@inject HttpClient Http

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Filled.AttachMoney" Class="mr-3 mb-n1" />
            Ticket
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@reservation" OnValidSubmit="AddReservation">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardContent>
                    <MudTextField Value="@reservation.TravelCompanyName" Label="Company name" ReadOnly="true" />
                    <MudTextField Value="@reservation.Price" Label="Travel price" ReadOnly="true" />
                    <MudTextField Value="@Math.Round(reservation.TravelTime, 2)" Label="Travel time (days)" ReadOnly="true" />
                    <MudTextField Value="@reservation.From" Label="From" ReadOnly="true" />
                    <MudTextField Value="@reservation.To" Label="To" ReadOnly="true" />
                    <MudTextField @bind-Value="reservation.FirstName" For="@(() => reservation.FirstName)" Label="First name" Variant="Variant.Text"></MudTextField>
                    <MudTextField @bind-Value="reservation.LastName" For="@(() => reservation.LastName)" Label="Last name" Variant="Variant.Text"></MudTextField>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Buy ticket</MudButton>
                </MudCardActions>
            </MudCard>           
        </EditForm>
    </DialogContent>
</MudDialog>



@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    //[Parameter] public Provider provider { get; set; } = new Provider();
    [Parameter] public Reservation reservation { get; set; }
    [Parameter] public string travelPriceId { get; set; }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    protected async void AddReservation()
    {
        string lastTravelPriceId = await Http.GetStringAsync("api/travelprices/lasttravelpriceid");
        if (travelPriceId.Equals(lastTravelPriceId))
        {
            var response = await Http.PostAsJsonAsync("api/reservations", reservation);
            response.EnsureSuccessStatusCode();
            var boolean = await response.Content.ReadFromJsonAsync<bool>();
            //In a real world scenario this bool would probably be a service to delete the item from api/database
            MudDialog.Close(DialogResult.Ok(boolean));
        }
        else MudDialog.Close(DialogResult.Ok(false));
    }
}
